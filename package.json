{
  "name": "edgepicks",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "bootstrap:env": "node scripts/bootstrap-env.mjs",
    "dev": "npm run bootstrap:env && next dev",
    "prebuild": "ts-node --project tsconfig.node.json scripts/checkRouteConflicts.ts && ts-node --project tsconfig.node.json scripts/checkMergeMarkers.ts && ts-node --project tsconfig.node.json scripts/assertClientSafeAgents.ts && ts-node --project tsconfig.node.json scripts/removeStaticParamsForDynamicRoutes.ts && npm run fix:revalidate && ts-node --project tsconfig.node.json scripts/guards/validateRevalidate.ts && npm run fix:aliases && npm run guard:aliases && npm run guard:swr && npm run setup:dev",
    "build": "npm run validate-env && next build",
    "start": "npm run validate-env && next start",
    "test": "NODE_OPTIONS=--experimental-vm-modules jest --runInBand",
    "fix:aliases": "ts-node --project tsconfig.node.json scripts/codemods/aliasImports.ts",
    "guard:aliases": "ts-node --project tsconfig.node.json scripts/guards/enforceAliasImports.ts",
    "guard:swr": "ts-node --project tsconfig.node.json scripts/guards/swrImportGuard.ts",
    "test:update": "CI=1 npm test -- -u",
    "test:ci": "CI=1 npm test -- --runInBand",
    "test:unit": "jest --passWithNoTests",
    "test:a11y": "jest __tests__/a11y.test.tsx",
    "dev:local": "npm run validate-env && ts-node --project tsconfig.node.json scripts/listMissingEnv.ts && next dev --port 3000",
    "test:local": "ts-node --project tsconfig.node.json scripts/testLocal.ts",
    "validate-env": "ts-node --project tsconfig.node.json scripts/validateEnv.ts",
    "list-missing-env": "ts-node --project tsconfig.node.json scripts/listMissingEnv.ts",
    "env:check": "node -e \"require('./lib/config/env'); console.log('Env OK')\"",
    "test:metadata": "ts-node --project tsconfig.node.json scripts/audit-agent-metadata.ts",
    "postpush": "ts-node --project tsconfig.node.json scripts/log-llms-entry.ts",
    "prepare": "husky",
    "lint": "eslint .",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "doctor": "npm run lint && npm run typecheck",
    "check": "npm run doctor",
    "sync-system-diagram": "ts-node --project tsconfig.node.json scripts/syncSystemDiagram.ts",
    "snap:test": "ts-node --project tsconfig.node.json scripts/uiSnapshot.ts",
    "docs:refresh": "ts-node --project tsconfig.node.json scripts/refreshDocs.ts",
    "docs:self-reflect": "ts-node --project tsconfig.node.json scripts/agentSelfReflection.ts",
    "docs:sops": "ts-node --project tsconfig.node.json scripts/generateSOPs.ts",
    "doc:check": "ts-node --project tsconfig.node.json scripts/check-docstrings.ts",
    "dev:commit": "ts-node --project tsconfig.node.json scripts/dev/commit-helper.ts",
    "weights:calibrate": "ts-node --project tsconfig.node.json scripts/calibrateWeights.ts",
    "purge-cache": "ts-node --project tsconfig.node.json scripts/purge-cache.ts",
    "guard:dry": "CONFLICT_GUARD_DRY_RUN=1 ts-node --project tsconfig.node.json scripts/checkRouteConflicts.ts",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "setup:dev": "ts-node --project tsconfig.node.json scripts/bootstrapDevEnv.ts",
    "fix:revalidate": "ts-node --project tsconfig.node.json scripts/codemods/enforceRevalidate.ts"
  },
  "dependencies": {
    "@octokit/rest": "^20.1.0",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@react-leaflet/core": "^2.1.0",
    "@supabase/supabase-js": "^2.39.5",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "diff": "^8.0.2",
    "framer-motion": "^11.18.2",
    "ioredis": "^5.4.1",
    "leaflet": "^1.9.4",
    "lucide-react": "^0.536.0",
    "next": "^14.1.0",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.6",
    "p-limit": "^3.1.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-leaflet": "^4.2.1",
    "react-window": "^1.8.11",
    "recharts": "^2.15.4",
    "sonner": "^1.7.4",
    "swr": "^2.3.4",
    "tailwind-merge": "^3.3.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@playwright/test": "^1.54.2",
    "@storybook/addon-a11y": "^7.6.17",
    "@storybook/addon-essentials": "^7.6.17",
    "@storybook/nextjs": "^7.6.17",
    "@storybook/testing-library": "^0.2.2",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^29.5.14",
    "@types/jest-axe": "^3.5.9",
    "@types/leaflet": "^1.9.20",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^24.2.0",
    "@types/puppeteer": "^5.4.7",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.0",
    "@types/react-window": "^1.8.8",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "ajv": "^8.17.1",
    "autoprefixer": "^10.4.14",
    "eslint": "^8.57.0",
    "eslint-config-next": "^15.4.6",
    "eslint-plugin-jsx-a11y": "^6.9.0",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-transform-stub": "^2.0.0",
    "msw": "^1.3.5",
    "postcss": "^8.4.31",
    "storybook": "^7.6.17",
    "tailwindcss": "^3.3.3",
    "ts-jest": "^29.4.1",
    "ts-morph": "^26.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2",
    "whatwg-fetch": "^3.6.20",
    "zod-to-json-schema": "^3.24.6"
  }
}
